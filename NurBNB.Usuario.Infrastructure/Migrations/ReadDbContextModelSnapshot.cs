// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NurBNB.Usuario.Infrastructure.EF.Contexts;

#nullable disable

namespace NurBNB.Usuario.Infrastructure.Migrations
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.CheckInReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("inId");

                    b.Property<string>("Contacto")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("contacto");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaLlegada");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guestId");

                    b.Property<Guid>("ReservaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reservaId");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("checkin");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.CheckOutReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("outId");

                    b.Property<string>("Calificacion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("calificacion");

                    b.Property<string>("ComentarioHuesped")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("comentario");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2")
                        .HasColumnName("fechaSalida");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guestId");

                    b.Property<Guid>("ReservaId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reservaId");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("checkout");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.HuespedReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("guestId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("lastName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("phoneNumber");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("huesped");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.StaffReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("staffId");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("lastName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("phoneNumber");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("staff");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.UsuarioReadModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usuarioId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("userName");

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.CheckInReadModel", b =>
                {
                    b.HasOne("NurBNB.Usuario.Infrastructure.EF.ReadModel.HuespedReadModel", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.CheckOutReadModel", b =>
                {
                    b.HasOne("NurBNB.Usuario.Infrastructure.EF.ReadModel.HuespedReadModel", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.HuespedReadModel", b =>
                {
                    b.HasOne("NurBNB.Usuario.Infrastructure.EF.ReadModel.UsuarioReadModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NurBNB.Usuario.Infrastructure.EF.ReadModel.StaffReadModel", b =>
                {
                    b.HasOne("NurBNB.Usuario.Infrastructure.EF.ReadModel.UsuarioReadModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
